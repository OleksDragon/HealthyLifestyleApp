services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: healthy_backend
    ports:
      - "5000:8080"
    depends_on:
      mssql:
        condition: service_started
      redis:
        condition: service_started
      minio:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=mssql,1433;Database=${MSSQL_DB};User Id=${MSSQL_USER};Password=${SA_PASSWORD};Encrypt=False;TrustServerCertificate=True;MultipleActiveResultSets=True
      - JWT__Key=${JWT_KEY}
      - JWT__Issuer=${JWT_ISSUER}
      - JWT__Audience=${JWT_AUDIENCE}
      - Redis__ConnectionString=healthy_redis:6379
      - GoogleAuth__ClientId=${GOOGLE_CLIENT_ID}
      - GoogleAuth__ClientSecret=${GOOGLE_CLIENT_SECRET}
      - DynamicRendering:InternalFrontendUrl=http://healthy_frontend:3000
      - MinIO__Endpoint=minio:9000
      - MinIO__PublicEndpoint=31.202.68.76:9000   # якщо розгортаємо на сервері — https://your-domain.com:9000
      - MinIO__AccessKey=${MINIO_ACCESS_KEY}
      - MinIO__SecretKey=${MINIO_SECRET_KEY}
      - MinIO__BucketName=images
      - Stripe__PublishableKey=${STRIPE_PUBLISHABLE_KEY}
      - Stripe__SecretKey=${STRIPE_SECRET_KEY}
      - WebhookSecret=whsec_9mm2ZUMIHpuspkbji0xTuuzqvYKVX5gN # змінити whsec_... пілся заміни url webhook 
    networks:
      - healthy_net
    command: sh -c "until nc -z -w 1 healthy_mssql 1433; do echo 'Waiting for MSSQL to be ready...'; sleep 1; done && dotnet HealthyLifestyle.Api.dll"    

  minio:
    image: minio/minio:latest
    container_name: healthy_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    networks:
      - healthy_net
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: healthy_mssql
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
    ports:
      - "${MSSQL_PORT}:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - healthy_net

  redis:
    image: redis:latest
    container_name: healthy_redis
    ports:
      - "6379:6379"
    networks:
      - healthy_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: ["redis-server", "--appendonly", "no"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: healthy_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    networks:
      - healthy_net

  rendertron:
    build:
      context: ./rendertron
      dockerfile: Dockerfile
    container_name: healthy_rendertron
    networks:
      - healthy_net
    depends_on:
      frontend:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://healthy_frontend:3000/_ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mssql_data:
  minio_data: 

networks:
  healthy_net:
    name: healthy_net
    driver: bridge